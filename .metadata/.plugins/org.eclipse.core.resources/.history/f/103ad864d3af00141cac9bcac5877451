package edu.pitt.ui;

import java.awt.EventQueue;

import javax.swing.JFrame;

import edu.pitt.bank.Account;
import edu.pitt.bank.Bank;
import edu.pitt.bank.Customer;
import edu.pitt.utilities.*;

import javax.swing.JTextArea;

import java.awt.Color;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Locale;

import javax.swing.JComboBox;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.UIManager;

public class AccountDetailsView {
	protected static NumberFormat moneyFormat = NumberFormat.getCurrencyInstance(Locale.US);
    protected static NumberFormat percentFormat = NumberFormat.getPercentInstance(Locale.ENGLISH);
    protected static SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    private ArrayList<String>permissions = new ArrayList<String>();
	private JFrame frmAccountDetails;	
	private Customer accountOwner;
	private Account selectedAccount;
	JLabel lblAccountTypeText;
	JLabel lblBalanceText;
	JComboBox cboAccounts;
	JLabel lblInterestRateText;
	JLabel lblPenaltyText ;
	JTextArea txtAreaMessage;
	JTextField txtAmount;

	/**
	 * Create the application.
	 */
	public AccountDetailsView(Customer c, ArrayList<String> groups) {
		accountOwner = c;
		permissions = groups;
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frmAccountDetails = new JFrame();
		frmAccountDetails.setTitle("Account Details    " + dateFormat.format(new Date(System.currentTimeMillis())));
		frmAccountDetails.setBounds(100, 100, 507, 300);
		frmAccountDetails.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frmAccountDetails.getContentPane().setLayout(null);
					
		//combo box controls
		cboAccounts = new JComboBox();
		cboAccounts.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				selectedAccount = (Account) cboAccounts.getSelectedItem();
				refreshScreenData();
			}
		});
		cboAccounts.setBounds(133, 84, 350, 27);
		frmAccountDetails.getContentPane().add(cboAccounts);
		
		JLabel lblAccounts = new JLabel("Your Accounts:");
		lblAccounts.setBounds(20, 88, 109, 16);
		frmAccountDetails.getContentPane().add(lblAccounts);
		
		//account details
		JLabel lblAccountType = new JLabel("Account type:");
		lblAccountType.setBounds(20, 126, 97, 16);
		frmAccountDetails.getContentPane().add(lblAccountType);
		
		lblAccountTypeText = new JLabel("");
		lblAccountTypeText.setBounds(122, 126, 109, 16);
		frmAccountDetails.getContentPane().add(lblAccountTypeText);
		
		JLabel lblBalance = new JLabel("Balance:");
		lblBalance.setBounds(20, 151, 97, 16);
		frmAccountDetails.getContentPane().add(lblBalance);
		
		JLabel lblInterestRate = new JLabel("Interest Rate:");
		lblInterestRate.setBounds(20, 178, 97, 16);
		frmAccountDetails.getContentPane().add(lblInterestRate);
		
		JLabel lblPenalty = new JLabel("Penalty:");
		lblPenalty.setBounds(20, 200, 97, 16);
		frmAccountDetails.getContentPane().add(lblPenalty);
		
		txtAmount = new JTextField();
		txtAmount.setBounds(366, 122, 108, 28);
		frmAccountDetails.getContentPane().add(txtAmount);
		txtAmount.setColumns(10);
		
		JLabel lblAmount = new JLabel("Amount:");
		lblAmount.setBounds(304, 125, 61, 16);
		frmAccountDetails.getContentPane().add(lblAmount);
		
		JButton btnWithdraw = new JButton("Withdraw");
		btnWithdraw.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				selectedAccount.withdraw(Double.parseDouble(txtAmount.getText()));
				refreshScreenData();
			}
		});
		btnWithdraw.setBounds(385, 150, 89, 29);
		frmAccountDetails.getContentPane().add(btnWithdraw);
		
		JButton btnDeposit = new JButton("Deposit");
		btnDeposit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				selectedAccount.deposit(Double.parseDouble(txtAmount.getText()));
				refreshScreenData();
			}
		});
		btnDeposit.setBounds(300, 150, 89, 29);
		frmAccountDetails.getContentPane().add(btnDeposit);
		
		JButton btnShowTransactions = new JButton("Show Transactions");
		btnShowTransactions.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TransactionView transListView = new TransactionView(selectedAccount);
			}
		});
		btnShowTransactions.setBounds(203, 227, 162, 29);
		frmAccountDetails.getContentPane().add(btnShowTransactions);
		
		JButton btnExit = new JButton("Exit");
		btnExit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		btnExit.setBounds(366, 227, 117, 29);
		frmAccountDetails.getContentPane().add(btnExit);	
		
		txtAreaMessage = new JTextArea();
		txtAreaMessage.setBackground(UIManager.getColor("window"));
		txtAreaMessage.setLineWrap(true);
		txtAreaMessage.setWrapStyleWord(true);
		txtAreaMessage.setText(getWelcomeMessage());
		txtAreaMessage.setBounds(20, 16, 463, 56);
		frmAccountDetails.getContentPane().add(txtAreaMessage);
		
		lblBalanceText = new JLabel("");
		lblBalanceText.setBounds(122, 154, 109, 16);
		frmAccountDetails.getContentPane().add(lblBalanceText);
		
		lblInterestRateText = new JLabel("");
		lblInterestRateText.setBounds(122, 178, 109, 16);
		frmAccountDetails.getContentPane().add(lblInterestRateText);
		
		lblPenaltyText = new JLabel("");
		lblPenaltyText.setBounds(122, 200, 109, 16);
		frmAccountDetails.getContentPane().add(lblPenaltyText);
		
//////////////////////////////////////////////////////////////////////////////
//              FUNCTIONALITY
//////////////////////////////////////////////////////////////////////////////
		
		//old sql way
//		DbUtilities db = new MySqlUtilities();
//		ResultSet rs = null;
//
//		String sql = "SELECT * FROM account ";
//				sql+= "JOIN customer_account ON accountID=fk_accountID ";
//				sql+= "WHERE fk_customerID='" + accountOwner.getCustomerID() + "';";
//		try{
//			rs = db.getResultSet(sql);
//			while(rs.next()){
//				Account acct = new Account(rs.getString("accountID"));
//				
//				cboAccounts.addItem(acct);
//			}
//		}catch(SQLException e){
//			ErrorLogger.log("Error while loading customer accounts.");
//			ErrorLogger.log(e.getMessage());
//		}finally{
//			db.silentClose(rs);
//			db.silentClose();
//		}
		
		//no sql way
		Bank b = new Bank();
		
		
		//finally display the form
		frmAccountDetails.setVisible(true);
		
		
	}
	
	/**
	 * Reloads the account information displayed
	 * on the form. Updates the current account's Type, Balance, Interest Rate
	 * and Penalty.
	 */
	private void refreshScreenData(){
		lblAccountTypeText.setText(selectedAccount.getType());
		lblBalanceText.setText(moneyFormat.format(selectedAccount.getBalance()));
		lblInterestRateText.setText(percentFormat.format(selectedAccount.getInterestRate()));
		lblPenaltyText.setText(moneyFormat.format(selectedAccount.getPenalty()));
	}
	
	/**
	 * Generates the welcome message for the account screen
	 * @return String
	 */
	private String getWelcomeMessage(){
		String welcomeMsg = accountOwner.getFirstName() + " " + accountOwner.getLastName();
		welcomeMsg +=", welcome to 1017 bank. You have the following permissions in this system: ";
		
		StringBuilder sb = new StringBuilder();
			for(String access: permissions){
				sb.append(access + ", ");
			}
			
			if(sb.length()>0){
				sb.setLength(sb.length() - 2);				
				welcomeMsg += sb.toString();
			}else{
				welcomeMsg += "none";
			}
	
		return welcomeMsg;
	}
}
